version: "3.8"

services:
  # Base de donn√©es PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: foodie-cook-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: foodie_cook
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - foodie-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d foodie_cook"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: foodie-cook-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/foodie_cook
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-change-this-in-production
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - foodie-network
    volumes:
      - ./public:/app/public:ro

volumes:
  postgres_data:
    driver: local

networks:
  foodie-network:
    driver: bridge
